#!/bin/bash
#
# RHEL/Centos Bootstrap Script
#
set -u -e

#
# write log
#
write_log() {
  if [[ -n "${1}" ]];
  then
    local datestamp=$(/bin/date "+%Y-%m-%d %H:%M:%S %z")
    echo "${datestamp} make::centos::${1}"
  fi
}

#
# install packages
#
yum_packages() {
  local packages=(
    'autoconf'
    'cmake'
    'curl'
    'curl-devel'
    'fping'
    'gcc'
    'gcc-c++'
    'jq'
    'lua-devel'
    'ncurses-devel'
    'openssl'
    'openssl-devel'
    'rpm-build'
    'rpmdevtools'
    'ruby'
    'subversion'
    'tree'
    'unzip'
    'wget'
  )

  write_log "${FUNCNAME[0]} => init"

  write_log "${FUNCNAME[0]} => update system"
  yum update -y -q -e 0

  write_log "${FUNCNAME[0]} => install packages"
  yum install -y -q -e 0 "${packages[@]}"

  write_log "${FUNCNAME[0]} => done"
}

#
# install git (from source)
#
git_from_source() {
  local git_vrs="2.11.1"
  local git_src="/usr/local/src"
  local git_tar="https://github.com/git/git/archive/v${git_vrs}.tar.gz"

  write_log "${FUNCNAME[0]} => init"
  (
    curl -sSL "${git_tar}" | tar -C "${git_src}" -zx

    cd "${git_src}/git-${git_vrs}"
    make configure
    ./configure

    write_log "${FUNCNAME[0]} => intalling version ${git_vrs}"
    make
    make install
  )
  write_log "${FUNCNAME[0]} => done"
}

#
# install hub (from source)
#
hub_from_source() {
  local hub_vrs="2.3.0-pre8"
  local hub_src="/usr/local/src"
  local hub_tar="https://github.com/github/hub/releases/download/v${hub_vrs}/hub-linux-amd64-${hub_vrs}.tgz"

  write_log "${FUNCNAME[0]} => init"
  (
    curl -sSL "${hub_tar}" | tar -C "${hub_src}" -zx

    cd "${hub_src}/hub-linux-amd64-${hub_vrs}"
    write_log "${FUNCNAME[0]} => intalling hub v${hub_vrs}"
    ./install
  )
  write_log "${FUNCNAME[0]} => done"
}

#
# install golang and packages
#
go_from_source() {
  local go_vrs="1.7.5"
  local go_src="/usr/local/go"
  local go_tar="https://storage.googleapis.com/golang/go${go_vrs}.linux-amd64.tar.gz"

  write_log "${FUNCNAME[0]} => init"

  # remove old version
  if [[ -d "${go_src}" ]];
  then
    rm -rf "${go_src}"
  fi

	# install go
  (
    write_log "${FUNCNAME[0]} => intalling go v${go_vrs}"
    curl -sSL "${go_tar}" | tar -C /usr/local -zx
  )

  write_log "${FUNCNAME[0]} => done"
}

#
# install vim
#
vim_from_source() {
  local vim_vrs="8.0"
  local vim_cfg=(
    "--prefix=/usr"
    "--enable-luainterp"
    "--enable-rubyinterp"
    "--with-features=huge"
    "--enable-pythoninterp"
  )
  local vim_src="/usr/local/src"
  local vim_tar="ftp://ftp.vim.org/pub/vim/unix/vim-${vim_vrs}.tar.bz2"

  write_log "${FUNCNAME[0]} => init"
  (
    curl -sSL "${vim_tar}" | tar -C "${vim_src}" -xj

    cd "${vim_src}/vim80"
    ./configure "${vim_cfg[@]}"

    write_log "${FUNCNAME[0]} => installing vim v${vim_vrs}"
    make
    make install
  )
  write_log "${FUNCNAME[0]} => done"
}

#
# bootstrap my machine
#
main() {
  write_log "${FUNCNAME[0]} => yum"
  yum_packages
  write_log "${FUNCNAME[0]} => go"
  go_from_source
  write_log "${FUNCNAME[0]} => git"
  git_from_source
  write_log "${FUNCNAME[0]} => hub"
  hub_from_source
  write_log "${FUNCNAME[0]} => vim"
  vim_from_source
}

main
