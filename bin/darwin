#!/bin/bash

#
# sudo (with keep-alive)
#
get_sudo() {
	sudo -v
	while true; do sudo -n true; sleep 60; kill -0 "$$" || exit; done 2>/dev/null &
}

#
# logger func
#
log() {
	local msg=$1
	local timestamp=$(/bin/date "+%Y-%m-%d %H:%M:%S %z")
	local message="${timestamp} [setup_mac] ${msg}"
	if [[ -n "${msg}" ]];
	then
		echo "${message}"
	fi
}

#
# install brew
#
install_brew() {
	if ! command -v brew >/dev/null;
	then
		log "installing homebrew"
		curl -fsSL \
			'https://raw.githubusercontent.com/Homebrew/install/master/install' | ruby
	else
		log "homebrew already installed.. moving on"
	fi
}

#
# update brew itself
#
update_brew() {
	brew update
}

#
# upgrade installed formulae
#
upgrade_formulae() {
	log "install_taps initializing"
	brew upgrade --all
	log "install_taps terminating"
}

#
# install a list of taps
#
install_taps() {
	local taps=(
		'homebrew/php'
		'caskroom/cask'
		'homebrew/dupes'
		'homebrew/versions'
		'homebrew/completions'
	)

	log "install_taps initializing"
	for tap in "${taps[@]}";
	do
		log "tapping ${tap}"
		brew tap "${tap}"
	done
	log "install_taps terminating"
}

#
# install a sh!t ton of bottles
#
install_bottles() {
	local bottles=(
		'autoconf'
		'automake'
		'bash'
		'bash-completion2'
		'curl'
		'dos2unix'
		'fping'
		'git'
		'hub'
		'jq'
		'libxml2'
		'libxslt'
		'libyaml'
		'openssl'
		'packer'
		'ruby'
		'shellcheck'
		'subversion'
		'tree'
		'vagrant-completion'
		'vim'
		'wget'
	)

	log "install_bottles initializing"
	for bottle in "${bottles[@]}";
	do
		log "installing bottle: ${bottle}"
		brew install "${bottle}"
	done
	log "install_bottles terminating"
}

#
# cleanup brew (outdated formulae)
#
cleanup_brew() {
	brew cleanup
}

#
# setup brew (install taps, bottles, etc)
#
setup_brew() {
	get_sudo
	install_brew
	update_brew
	upgrade_formulae
	install_taps
	install_bottles
	cleanup_brew
}

#
# setup vimfiles
#
setup_vimfiles() {
	local homedir="/Users/${USER}"
	local vimfiles='https://github.com/iamnande/vimfiles.git'

	(
		git clone ${vimfiles} "${homedir}/vimfiles"
		cd "${homedir}/vimfiles" || exit
		make
	)
}

#
# install golang and packages
#
setup_go() {
	get_sudo
	local go_version="1.7"
	local go_source="/usr/local/go"

	if [[ -d "${go_source}" ]];
	then
		sudo rm -rf "${go_source}"
	fi

	# go
	(
		curl -sSL \
		"https://storage.googleapis.com/golang/go${go_version}.darwin-amd64.tar.gz" | \
		sudo tar -v -C /usr/local -zx
	)

	# go packages
	(
		/usr/local/go/bin/go get -v golang.org/x/tools/cmd/cover
		/usr/local/go/bin/go get -v golang.org/x/tools/cmd/vet
		/usr/local/go/bin/go get -v golang.org/x/tools/cmd/goimports
		/usr/local/go/bin/go get -v golang.org/x/tools/cmd/oracle
		/usr/local/go/bin/go get -v golang.org/x/tools/cmd/gorename
		/usr/local/go/bin/go get -v github.com/golang/lint/golint

		/usr/local/go/bin/go get -v github.com/nsf/gocode
		/usr/local/go/bin/go get -v github.com/rogpeppe/godef
		/usr/local/go/bin/go get -v github.com/golang/lint/golint
		/usr/local/go/bin/go get -v github.com/alecthomas/kingpin
		/usr/local/go/bin/go get -v github.com/alecthomas/gometalinter
		/usr/local/go/bin/go get -v github.com/kisielk/errcheck
		/usr/local/go/bin/go get -v github.com/jstemmer/gotags
		/usr/local/go/bin/go get -v github.com/klauspost/asmfmt/cmd/asmfmt

		/usr/local/go/bin/go get -v github.com/iamnande/bodega
		/usr/local/go/bin/go get -v github.com/iamnande/openstack
	)
}

#
# install rvm (ruby versioning)
# http://rvm.io
#
setup_rvm() {
  local rvm_rev="stable"
  local home_dir="/Users/${USER}"
  local rvm_url="https://get.rvm.io"
  local rvm_exe="${home_dir}/.rvm/bin/rvm"

  (
  	cd "${HOME}"
	curl -sSL "${rvm_url}" | bash -s "${rvm_rev}"

	eval "${rvm_exe} use 2.1.6 --install --binary --fuzzy" # for poopets
  )
}

log "installing packages and apps"
setup_brew

log "installing vimfiles"
setup_vimfiles

log "installing golang and packages"
setup_go

log "installing ruby/rvm"
setup_rvm
