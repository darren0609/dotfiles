#!/bin/bash

# create directory
mkd() {
  mkdir -p "$@"
}

# fancy tree
tre() {
	tree -aC -I '.git' --dirsfirst "$@" | less -FRNX
}

# fancy man pages
man() {
	env \
		LESS_TERMCAP_mb=$(printf "\e[1;31m") \
		LESS_TERMCAP_md=$(printf "\e[1;31m") \
		LESS_TERMCAP_me=$(printf "\e[0m") \
		LESS_TERMCAP_se=$(printf "\e[0m") \
		LESS_TERMCAP_so=$(printf "\e[1;44;33m") \
		LESS_TERMCAP_ue=$(printf "\e[0m") \
		LESS_TERMCAP_us=$(printf "\e[1;32m") \
		man "$@"
}

# go to a folder easily in your gopath
gogo(){
	local d=$1

	if [[ -z $d ]]; then
		echo "You need to specify a project name."
		return 1
	fi

	if [[ "$d" = github* ]]; then
		d=$(echo $d | sed 's/.*\///')
	fi
	d=${d%/}

	# search for the project dir in the GOPATH
	local path=( `find "${GOPATH}/src" \( -type d -o -type l \) -iname "$d"  | awk '{print length, $0;}' | sort -n | awk '{print $2}'` )

	if [ "$path" == "" ] || [ "${path[*]}" == "" ]; then
		echo "Could not find a directory named $d in $GOPATH"
		echo "Maybe you need to 'go get' it ;)"
		return 1
	fi

	# enter the first path found
	cd "${path[0]}"
}

# ssh to a vagrant machine using a name
vssh() {
  local box_name="${1}"

  if [[ -z "${box_name}" ]]; then
    echo "box name not provided.. boo!"
    return 1
  fi

  local v_cmd=$(which vagrant)
  local v_stat=$($v_cmd global-status)
  local dir=$(grep "${box_name}" <<< "${v_stat}" | awk '{print $5}')
  local name=$(grep "${box_name}" <<< "${v_stat}" | awk '{print $1}')

  cd "${dir}" && $v_cmd ssh -c "sudo su -" $box_name
}
